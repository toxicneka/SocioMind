import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from config import TOKEN

# –ò–º–ø–æ—Ä—Ç handlers
from handlers.start import router as start_router
from handlers.test import router as test_router
from handlers.report import router as report_router

logging.basicConfig(level=logging.INFO)

async def scheduled_cleanup():
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    while True:
        await asyncio.sleep(24 * 60 * 60)  # 24 —á–∞—Å–∞
        from utils.helpers import cleanup_old_messages
        await cleanup_old_messages()

async def main():
    bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É
    asyncio.create_task(scheduled_cleanup())

    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
    from services.google_sheets_service import GoogleSheetsService
    sheets_service = GoogleSheetsService()
    
    # –ü–†–ê–í–ò–õ–¨–ù–´–ô –í–´–ó–û–í - —É–±—Ä–∞–ª await —Ç–∞–∫ –∫–∞–∫ test_connection —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π
    if hasattr(sheets_service, 'test_connection'):
        sheets_service.test_connection()
    else:
        logging.warning("GoogleSheetsService –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ test_connection")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    from utils.helpers import init_db
    await init_db()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(start_router)
    dp.include_router(test_router)
    dp.include_router(report_router)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–∞—Ç–æ–≤ (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    try:
        from handlers.chat_monitor import router as chat_monitor_router
        dp.include_router(chat_monitor_router)
        logging.info("‚úÖ Chat monitor router –∑–∞–≥—Ä—É–∂–µ–Ω")
    except ImportError as e:
        logging.warning(f"‚ö†Ô∏è Chat monitor –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω: {e}")

    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())